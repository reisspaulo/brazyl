# Docker Stack para produção (Docker Swarm)
# Deploy: docker stack deploy -c brazyl-stack.yml brazyl
version: '3.8'

services:
  # API FastAPI
  api:
    image: brazyl/api:latest
    environment:
      - ENVIRONMENT=prod
      - LOG_LEVEL=INFO
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - REDIS_URL=redis://redis:6379/0
      - AVISA_API_URL=${AVISA_API_URL}
      - AVISA_API_TOKEN=${AVISA_API_TOKEN}
      - API_KEY=${API_KEY}
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.brazyl-api.rule=Host(`api.brazyl.com`)"
        - "traefik.http.routers.brazyl-api.entrypoints=websecure"
        - "traefik.http.routers.brazyl-api.tls=true"
        - "traefik.http.routers.brazyl-api.tls.certresolver=letsencrypt"
        - "traefik.http.services.brazyl-api.loadbalancer.server.port=8000"
        - "traefik.http.services.brazyl-api.loadbalancer.healthcheck.path=/health"
        - "traefik.http.services.brazyl-api.loadbalancer.healthcheck.interval=30s"
    networks:
      - traefik-public
      - brazyl-internal
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:8000/health', timeout=5.0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  # Redis
  redis:
    image: redis:7-alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    networks:
      - brazyl-internal
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
  
  # N8N
  n8n:
    image: n8nio/n8n:latest
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
      - WEBHOOK_URL=https://n8n.brazyl.com/
      - N8N_PORT=5678
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.brazyl-n8n.rule=Host(`n8n.brazyl.com`)"
        - "traefik.http.routers.brazyl-n8n.entrypoints=websecure"
        - "traefik.http.routers.brazyl-n8n.tls=true"
        - "traefik.http.routers.brazyl-n8n.tls.certresolver=letsencrypt"
        - "traefik.http.services.brazyl-n8n.loadbalancer.server.port=5678"
    networks:
      - traefik-public
      - brazyl-internal
    volumes:
      - n8n-data:/home/node/.n8n

volumes:
  redis-data:
    driver: local
  n8n-data:
    driver: local

networks:
  traefik-public:
    external: true
  brazyl-internal:
    driver: overlay
    attachable: true

